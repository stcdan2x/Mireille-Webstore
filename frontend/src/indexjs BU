import error404screen from "./screens/error404screen.js";
import homescreen from "./screens/homescreen.js";
import productscreen from "./screens/productscreen.js";
import { parseRequestUrl } from "./utils.js";

const   titleBar = document.querySelector(".title"),
        promoBar = document.querySelector(".promo"),
        promoLeft = document.querySelector(".promo__text--left"),
        promoRight = document.querySelector(".promo__text--right"),
        prevBtn = document.querySelector(".banner__prev-btn"),
        nextBtn = document.querySelector(".banner__next-btn"),
        bannerSlider = document.querySelector(".banner__slider");
let     slides = document.querySelectorAll(".banner__slide"),
        slideSelectors = document.querySelectorAll(".banner__selector-btn");

//define valid screen paths
const routes = {
    "/": homescreen,
    "/product/:id": productscreen
};
const router = async () => {
    //assign processed screen path details
    const request = parseRequestUrl();
    //construct the processed screen path, try to set to homescreen if undefined
    const parseUrl = 
        (request.resource ? `/${request.resource}` : "/") +
        (request.id ? "/:id" : "") +
        (request.action ? `/${request.action}` : "");
    //match a valid screen path, else redirect to error404
    const screen = routes[parseUrl] ? routes[parseUrl] : error404screen;
    const main = document.getElementById("main-container");
    //render the appropriate screen using processed pathname
    main.innerHTML = await screen.render();
    /* homescreen.render(); */
};

//Styles and Presentation
class Present {
    removeActive () {
        for (let slide of slides) {
            slide.classList.remove("active");
        }
        for (let slideSelector of slideSelectors) {
            slideSelector.classList.remove("active");
        }
    }

    addActive (index) {
        slides[index].classList.add("active");
        slideSelectors[index].classList.add("active");
    }
}

window.addEventListener("load", router);
//monitor path changes
window.addEventListener("hashchange", router);

window.addEventListener("load", () => {
    const   present = new Present();

    //for initial banner animation
    const   insTitleBar = () => titleBar.style.transform = "translate(0)",
            insPromoBar = () => promoBar.style.transform = "translate(0)",
            dropLeft = () => promoLeft.style.transform = "translate(0)",
            dropRight = () => promoRight.style.transform = "translate(0)";
    setTimeout(insTitleBar, 100);
    setTimeout(insPromoBar, 800);
    setTimeout(dropLeft, 1200);
    setTimeout(dropRight, 1700);

    slides = [...slides];
    const slideCount = slides.length;
    let index = 0;
    nextBtn.addEventListener("click", () => {
        present.removeActive();
        index++;
        if(index > (slideCount - 1)) {
            index = 0;
        }
        present.addActive(index);
    });
    prevBtn.addEventListener("click", () => {
        present.removeActive();
        index--;
        if(index < 0) {
            index = (slideCount - 1);
        }
        present.addActive(index);
    });

    slideSelectors.forEach((selector, index) => {
        selector.addEventListener("click", () => {
            present.removeActive();
            present.addActive(index);
        });
    });

    let setAuto;
    const slideAuto = () => {
        setAuto = setInterval(() => {
            present.removeActive();
            index++;
            if(index > (slideCount - 1)) {
            index = 0;
            }
            present.addActive(index);
        }, 4000);
    }
    slideAuto();

    bannerSlider.addEventListener("mouseover", () => {
        clearInterval(setAuto);
        setAuto = 0;
    })

    bannerSlider.addEventListener("mouseout", () => {
        slideAuto();
    })
});
