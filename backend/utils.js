import jwt from "jsonwebtoken";
import config from "./config";

export const generateToken = user => {
    return jwt.sign(
        {
            _id: user._id,
            name: user.name,
            email: user.email,
            isAdmin: user.isAdmin
        },
        config.JWT_SECRET
    );
};

export const isAuth = (req, res, next) => {
    const bearerToken = req.headers.authorization; // token generated by generateToken
    if(!bearerToken) {
        res.status(401).send({ message: "Token not supplied" });
    } else {
        //extract token part / remove Bearer string portion
        const token = bearerToken.slice(7, bearerToken.length);
        //use bearer token to validate user request
        jwt.verify(token, config.JWT_SECRET, (err, data) => {
            if (err) {
                res.status(401).send({ message: "Invalid Token" });
            } else  {
                req.user = data; // data = data extracted by decoding token generated by generateToken on token creation
                next();
            }
        })
    }

}